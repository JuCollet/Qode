"use strict";angular.module("app",["ui.router","ngResource"]).config(["$stateProvider","$urlRouterProvider",function(e,o){o.otherwise("/encode"),e.state("root",{abstract:!0,views:{nav:{templateUrl:"views/nav.html"},content:{template:'<div ui-view="contentView"></div>'}}}).state("root.encode",{url:"/encode",params:{encode:null},views:{"options@root":{templateUrl:"views/navSwitch.html",controller:"NavController"},"contentView@root":{templateUrl:"views/home.html",controller:"EncodeController"}}}).state("root.decode",{url:"/decode",params:{encode:null},views:{"contentView@root":{templateUrl:"views/decode.html",controller:"DecodeController"},"options@root":{templateUrl:"views/navSwitch.html",controller:"NavController"}}}).state("root.decodexs",{url:"/decodexs",params:{encode:null},views:{"contentView@root":{template:"<h1>Decode small</h1>"}}}).state("root.newQode",{url:"/new/:qode",views:{"contentView@root":{templateUrl:"views/newQode.html",controller:"NewQodeController"},"newQodePreview@root.newQode":{templateUrl:"views/qodePreview.html"}}}).state("root.qode",{url:"/qode/:id",views:{"options@root":{templateUrl:"views/navBack.html"},"contentView@root":{templateUrl:"views/qodeView.html",controller:"ViewQodeController"}}}).state("root.login",{url:"/login",views:{"options@root":{templateUrl:"views/navBack.html"},"contentView@root":{templateUrl:"views/login.html",controller:"UserController"}}}).state("root.register",{url:"/register",views:{"options@root":{templateUrl:"views/navBack.html"},"contentView@root":{templateUrl:"views/register.html",controller:"UserController"}}}).state("root.recovery",{url:"/recovery",views:{"contentView@root":{templateUrl:"views/recovery.html",controller:"UserController"}}}).state("root.recoveryInfo",{url:"/recoveryinfo",views:{"options@root":{templateUrl:"views/navBack.html"},"contentView@root":{templateUrl:"views/recoveryInfo.html",controller:"UserController"}}}).state("root.myaccount",{url:"/myaccount",views:{"options@root":{templateUrl:"views/navBack.html"},"contentView@root":{templateUrl:"views/myAccount.html",controller:"UserController"}}})}]),angular.module("app").factory("qodeFactory",["$resource","$q",function(e,o){var t=e("/api/qodes/check/",null,{check:{method:"POST"}}),n=function(e,o,n){t.check({qode:e}).$promise.then(function(e){e.isAvailable?o():n()},function(e){return e})},r=["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"],i=[],a="";return{mockQodes:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:3;return o(function(o,t){i=[];for(var s=0;s<e;s++){a="";for(var l=0;l<5;l++)a+=l<2?r[Math.floor(24*Math.random())]:Math.floor(10*Math.random());i.push(a)}n(i[e-1],function(){o(i)},function(){t("error")})})},checkQodeIfAvailable:n}}]),angular.module("app").service("viewQodeFactory",["$resource",function(e){return{qodes:e("/api/qodes/:id",null,{upvote:{url:"/api/qodes/upvote/",method:"POST"}})}}]),angular.module("app").factory("newQodeFactory",["$rootScope","$resource","$http",function(e,o,t){var n=o("/api/qodes/:id",null,{create:{method:"POST"},save:{method:"PUT"},edit:{url:"/api/qodes/edit/",method:"POST"}}),r={activate:function(){$("#ulButton").removeClass("is-light").addClass("button-yellow"),$("#ulButton span").text("Add file"),$("#ulButton i").removeClass("fa-spinner fa-spin").addClass("fa-plus"),$("#ulButton input").attr("disabled",!1)},disable:function(){$("#ulButton").addClass("is-light").removeClass("button-yellow"),$("#ulButton span").text("Uploading..."),$("#ulButton i").removeClass("fa-plus").addClass("fa-spinner fa-spin"),$("#ulButton input").attr("disabled",!0)}},i=function(o,n,i,a){t({method:"PUT",url:n,data:o}).then(function(e){var t=void 0;o.name.length>20&&(t=o.name.split(""),t.splice(20,t.length-20),t.push("..."),t=t.join(""));var n=e.config.url.split("?")[0];a(t||o.name,n,o.type.split("/")[1].toUpperCase()),r.activate()},function(){e.$broadcast("notification",{color:"red",title:"Oops...",message:"Try again later",glyph:"fa fa-times"}),r.activate()})};return{dbOperations:n,getSignedRequest:function(o,n){t({method:"GET",url:"/sign-s3?file-name="+o.name+"&file-type="+o.type}).then(function(e){i(o,e.data.signedRequest,e.data.url,n)},function(){e.$broadcast("notification",{color:"red",title:"Oops...",message:"Try again later",glyph:"fa fa-times"}),r.activate()})},uploadButtonStateChange:r}}]),angular.module("app").factory("userFactory",["$resource",function(e){return{user:e("/user",null,{addToFavorites:{url:"/user/addtofavorites",method:"PUT"},deleteQode:{url:"/user/deleteqode/:qodeId",method:"DELETE"},isLogged:{url:"/user/islogged",method:"GET"},login:{url:"/user/login",method:"POST"},logout:{url:"/user/logout",method:"GET"},recovery:{url:"/user/passwordrecovery",method:"POST"},register:{method:"POST"},reset:{method:"PUT"},removeFromFavorites:{url:"/user/removefromfavorites",method:"PUT"}})}}]),angular.module("app").controller("AppController",["$scope","$rootScope","$timeout","userFactory",function(e,o,t,n){var r=$("notification");e.notificationColor="",e.notificationMessageTitle="",e.notificationMessage="",e.notificationGlyph="",e.backButtonDestination="root.encode",$(function(){$('[data-toggle="tooltip"]').tooltip()}),o.isLogged={log:!1,name:""},n.user.isLogged().$promise.then(function(e){void 0!==e.isLogged&&!0===e.isLogged.log?(o.isLogged.log=!0,o.isLogged.name=e.isLogged.name):(o.isLogged.log=!1,o.isLogged.name="")},function(e){if(e)throw e}),o.$on("$stateChangeSuccess",function(o,t,n,r){null!==r.name&&void 0!==r.name&&("root.myaccount"===r.name?e.backButtonDestination="root.myaccount":"root.login"===r.name?e.backButtonDestination="root.login":"root.decode"===r.name?e.backButtonDestination='root.decode({encode:"decode"})':e.backButtonDestination="root.encode")}),e.$on("notification",function(o,n){e.notificationColor=n.color,e.notificationMessageTitle=n.title,e.notificationMessage=n.message,e.notificationGlyph=n.glyph,e.$applyAsync(function(){$("body > div").addClass("is-blurred"),r.fadeIn(250).delay(1500).fadeOut(500)}),t(function(){$("body > div").removeClass("is-blurred")},2250)})}]),angular.module("app").controller("NavController",["$scope","$rootScope","$state",function(e,o,t){var n=t.params.encode||"encode",r=$(".switch"),i=$(".switch-cursor");!function(){"encode"===n?i.css({marginLeft:"4px"}):i.css({marginLeft:"34px"})}();e.switchToggle=function(){"decode"===n?i.animate({marginLeft:"4px"},50,function(){t.go("root.encode",{encode:"encode"})}):$(window).width()>768?i.animate({marginLeft:"34px"},50,function(){t.go("root.decode",{encode:"decode"})}):i.animate({marginLeft:"34px"},50,function(){t.go("root.decodexs",{encode:"decode"})})},r.tooltip({show:200,hide:500})}]),angular.module("app").controller("NewQodeController",["$rootScope","$scope","$state","$timeout","newQodeFactory",function(e,o,t,n,r){var i=0,a=["default","orange","yellow","green","blue","purple"],s=function(e){this.cardTitle="",this.cardText="",this.cardReferences=[],this.color=e},l=function(e,o){this.text=e,this.link=o},c=function(e,o,t){this.fileName=e,this.filePath=o,this.fileType=t},d=function(e,t,n){o.newQode.files.push(new c(e,t,n))};o.newReference={url:"",name:""},o.removeFile=function(e){o.newQode.files.splice(e,1)},o.removeReference=function(e,t){o.newQode.cards[e].cardReferences.splice(t,1)},r.dbOperations.edit({qode:t.params.qode}).$promise.then(function(e){o.newQode=e},function(o){t.go("root.encode"),e.$broadcast("notification",{color:"red",message:o.data.error.message,title:"Oops...",glyph:"fa fa-times"})}),o.confirm=!1,o.confirmToggle=function(){o.confirm=!o.confirm},o.addNewCard=function(){i++,i===a.length&&(i=1),o.newQode.cards.push(new s(a[i]))};var u=function(o){return"http://"===o.substring(7,0)||"https://"===o.substring(8,0)||"www."===o.substring(4,0)||(e.$broadcast("notification",{color:"red",message:"No valid url found",title:"Oops...",glyph:"fa fa-times"}),!1)};o.addReference=function(t){if(u(o.newReference.url))return""!==o.newReference.url&&""!==o.newReference.name?(o.newQode.cards[t].cardReferences.push(new l(o.newReference.name,o.newReference.url)),void(o.newReference={url:"",name:""})):""!==o.newReference.url?(o.newQode.cards[t].cardReferences.push(new l(o.newReference.url,o.newReference.url)),void(o.newReference={url:"",name:""})):void e.$broadcast("notification",{color:"red",message:"No reference to add",title:"Oops...",glyph:"fa fa-times"})},o.deleteCard=function(e){$("#card"+e+">.card-delete").fadeOut(50,function(){$("#card"+e).slideUp(200,function(){o.newQode.cards.splice(parseInt(e),1),o.$apply()})})},o.postQode=function(){if(void 0===o.newQode.title||o.newQode.title.length<2)return e.$broadcast("notification",{color:"red",message:"You forgot the title",title:"Oops...",glyph:"fa fa-times"}),void o.confirmToggle();r.dbOperations.save({id:o.newQode._id},o.newQode).$promise.then(function(){e.$broadcast("notification",{color:"green",message:"Your Qode is online",title:"Congratulations !",glyph:"fa fa-check"}),n(function(){t.go("root.qode",{id:o.newQode.qode})},1500)})},document.getElementById("fileUpload").onchange=function(){if(o.newQode.files.length<5){var t=document.getElementById("fileUpload").files,n=t[0];if(null===n||void 0===n)return;r.uploadButtonStateChange.disable(),n.size<10485760?r.getSignedRequest(n,d):(e.$broadcast("notification",{color:"red",title:"Oops...",message:"This file is too big",glyph:"fa fa-tachometer"}),r.uploadButtonStateChange.activate())}else e.$broadcast("notification",{color:"red",message:"5 files maximum",title:"Sorry...",glyph:"fa fa-times"})},$(".card-color-choice").click(function(e){var o=$(this),t=$(this).parents()[1];"true"===o.attr("data-isSelected")?($(".card-color-choice").removeAttr("data-isSelected"),$(t).attr("data-color","default")):($(".card-color-choice").removeAttr("data-isSelected"),o.attr("data-isSelected",!0),$(t).attr("data-color",e.currentTarget.id.substr(11)))})}]),angular.module("app").controller("EncodeController",["$rootScope","$scope","qodeFactory","newQodeFactory","userFactory","$state",function(e,o,t,n,r,i){var a=$(".qode-code")[0].children,s=0,l=0,c=void 0,d=function e(o){setTimeout(function(){return s<o.length?l<o[0].length?($(a[s]).text(o[l][s]),l++,void e(o)):(l=0,s++,void e(o)):void(s=0)},25)};o.getThisQode=function(){t.checkQodeIfAvailable(c,function(){r.user.isLogged().$promise.then(function(o){void 0!==o.isLogged&&!0===o.isLogged.log?n.dbOperations.create({qode:c}).$promise.then(function(){i.go("root.newQode",{qode:c})}):e.$broadcast("notification",{color:"red",message:"You're not logged",title:"Oops...",glyph:"fa fa-times"})})},function(){e.$broadcast("notification",{color:"red",message:"It's not available anymore",title:"Oops...",glyph:"fa fa-times"})})},o.getQodes=function(){t.mockQodes(5).then(function(e){c=e[e.length-1],d(e)},function(){o.getQodes()})},o.getQodes()}]),angular.module("app").controller("DecodeController",["$scope","viewQodeFactory","$timeout","$state",function(e,o,t,n){var r=$(".qode-code")[0].children,i=["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"],a=0,s="",l=!1;document.onkeyup=function(e){null!==document.getElementById("qodeDecode")&&(a<2&&-1!==i.indexOf(e.key.toLowerCase())?($(r[a]).text(e.key),a<5&&(s+=e.key.toUpperCase(),a++)):a>1&&parseInt(e.key)>=0&&parseInt(e.key)<=9&&($(r[a]).text(e.key),a<=4&&(s+=e.key,a++)),"Backspace"===e.key&&(a>0&&(a--,s=s.slice(0,a)),$(r[a]).html("&nbsp;")),5===s.length&&!1===l?(l=!0,$("#status").html('<i class="fa fa-refresh fa-spin"></i>&nbsp;&nbsp;Searching...'),o.qodes.get({id:s}).$promise.then(function(){$("#status").html('<i class="fa fa-check is-green"></i>&nbsp;&nbsp;Found'),t(function(){n.go("root.qode",{id:s})},500),l=!1},function(e){$("#status").html('<i class="fa fa-times is-red"></i>&nbsp;&nbsp;'+e.statusText+" :("),l=!1})):$("#status").html("&nbsp;"))}}]),angular.module("app").controller("ViewQodeController",["$scope","$stateParams","viewQodeFactory","userFactory",function(e,o,t,n){e.data=t.qodes.get({id:o.id}).$promise.then(function(o){e.qode=o}),e.thanksAuthor=function(o){t.qodes.upvote({toUpvote:o}).$promise.then(function(){e.qode.upVotes++,e.qode.isLiked=!0})},e.addToFavorites=function(o){n.user.addToFavorites({favId:o}).$promise.then(function(){e.qode.isFavorited=!0})}}]),angular.module("app").controller("UserController",["$rootScope","$scope","$state","userFactory",function(e,o,t,n){o.name="",o.mail="",o.password="",o.confirmPassword="",o.passwordValidation=function(){return o.password===o.confirmPassword},o.login=function(){var r={mail:o.mail,password:o.password};n.user.login(r).$promise.then(function(o){e.isLogged={log:!0,name:o.name,favorites:o.favorites},t.go("root.encode",{encode:"encode"})},function(o){e.$broadcast("notification",{color:"red",message:o.data.error.message,title:"Oops...",glyph:"fa fa-times"})})},o.logout=function(){n.user.logout().$promise.then(function(){e.isLogged={log:!1,name:"",favorites:[]}},function(){e.$broadcast("notification",{color:"red",message:"Can't log out",title:"Oops...",glyph:"fa fa-times"})})},o.register=function(){var r={name:o.name,mail:o.mail,password:o.password,confirmPassword:o.confirmPassword};if(r.password!==r.confirmPassword)return void e.$broadcast("notification",{color:"red",message:"doesn't match",title:"Passwords",glyph:"fa fa-times"});n.user.register(r).$promise.then(function(o){e.isLogged={log:!0,name:o.name,favorites:o.favorites},e.$broadcast("notification",{color:"green",message:"You're in, "+o.name,title:"Welcome",glyph:"fa fa-check"}),t.go("root.encode",{encode:"encode"})},function(o){e.$broadcast("notification",{color:"red",message:o.data.error.message,title:"Oops...",glyph:"fa fa-times"})})},!0===e.isLogged.log&&(o.data=n.user.get().$promise.then(function(e){o.user=e})),o.viewQode=function(e){t.go("root.qode",{id:e})},o.removeFromFavorites=function(e,t){o.user.favorites.splice(t,1),n.user.removeFromFavorites({favId:e})},o.deleteQode=function(e,t){o.user.myqodes.splice(t,1),n.user.deleteQode({qodeId:e})},o.editQode=function(e){t.go("root.newQode",{qode:e})},o.recovery=function(){n.user.recovery({mail:o.mail}).$promise.then(function(){e.$broadcast("notification",{color:"green",message:"Check your emails.",title:"Alright !",glyph:"fa fa-check"}),t.go("root.encode")},function(o){e.$broadcast("notification",{color:"red",message:o.data.error.message,title:"Oops..",glyph:"fa fa-times"})})},o.resetPassword=function(){n.user.reset({newPassword:o.confirmPassword}).$promise.then(function(){e.$broadcast("notification",{color:"green",message:"Password reset",title:"Alright !",glyph:"fa fa-check"}),t.go("root.encode")})}}]),angular.module("app").directive("notification",function(){return{restrict:"E",templateUrl:"views/notification.html"}}).directive("confirmation",function(){return{restrict:"E",templateUrl:"views/confirmation.html"}});